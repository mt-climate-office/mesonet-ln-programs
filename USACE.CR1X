 'USACE Standard Program: Task Order 1
'Program author:  Kevin Hyde, MT Mesonet Manager, kevin.hyde@umontana.edu
'Date:  210...'
'NOTE: Logger Time SET to UTC yearround - re: Camera Image Control

'update all branches

'Attempt to eliminate SkippedScan errors in SlowSequence (3) SR50A
  'Change sdi12recorder command to "C" from "M"
    'Line 566
'211116 v7.4.1: Attempt improve performance of SlowSeq (1) - SDI12 on C5
  'Increase scan time to 60 sec from 20 sec
    'Lines 412,414
  'Change SDI12 command (SlowSeq (1)) to C! from M!
    'Lines:421,439,444
  'Change Main scan to 3 sec from 5 sec to restore WMO wind gust standard
    ' Line 336 with cascade to Line 382 - Conditional SR50A start
'211115 v7.4.0: Attempt to correct Skipped Scans - SlowSeq (3)
  'Split SlowSequence '(3) Calls for Cameras, Modem Power recycle
    'Line 474
  'Added SlowSequence '(4) Calls for Snow Depth Sensor
    'Line 543
  'Revert main scan to 
'211110 v7.3.0 > 7.3.1: First changes to address Skipped Scans and Records
  'Change Main scan to 5 sec from 3 sec
    ' Line 323 with cascade to Line 369 - Conditional SR50A start
  'SlowSequence (1): Change scan rate to 20 seconds from 10 to address skipped scans 
    'Line 401 with cascade to Line 410 - pyran multiplier
  'Reduce camera call iterations to 4 from 10: Photos normally made by 1 or 2 tries
    'Line 441, 492, 502, 512
  'Move CallTable FiveMin to SlowSequence (1) from SlowSequence 3
    'Line 448

'211027 SR50A - Corrected temperature correction call on line 537
'210929 v7.2.0
  ' Restored code to drive SR50A
  ' Checked against Bozeman code
'210903: Corrected fieldnames in tables
  'Restored elevation on air temp
  'Synchcronizing variables across all stations including Bozeman
'7.0.4 21...
'    Reorder variables --> Modem_Power appears first
'v7.0.3 210624
'    Change pyranometer multiplier to 10 from 5 (scanrate) Line 
'v7.0.2 210624
'    Move HygroVUE code inside of SlowScan with other C5 sensors
'v7.0.1 210624
'    Null out code to bypass air-temp_200 problem
'      Lines 126-127, 334-38
'    Add semaphoreget - release to control for multiple devices on C5
'v7.0.0 210623
'   Comment out snow depth code, leaving public variables
'   Assigned null values "-99" to depth and q
'   Added code to bypass air_temp_200 = "NAN" problem 

'v6.1.2 210603 - Completed change to lowercase
'v6.1.1
'Modified 210602
'Editted attribute names > all lowercase
' MODIFIED 210528
'  Add script to cycle modem power daily

'****************************************************************************
'***********WIRING DIAGRAM******************
'
'  Modem power 
'    Ground:  Black
'    12v:     Red (Rv50)
'    SW2:     White (Rv50)
'
'*****SENSOR_1 Open Door Sensor*******************************
'***Door Switch  
'    White    C1
'    White    5v
'
'*****SENSOR_2 Wind Monitor*******************************
'***Wind Monitor: RM Young 9106 - Based on Analog voltage output, not RS485
'      current "leak" results in non-0 WS value 
'    Red:     12v     12v power      PWR
'    White:   AG      Signal G       REF	
'    Clear:   AG      Signal G	     REF
'    Green:   SE13    WD Signal	     A
'    Brown    SE14    WS Signal      B
'    Black    G       Power ground   EARTH
'
'*****SENSOR_3 Barometer**********************************
'***Barometer: CS100
'    Blue:    SE2     Signal H
'    Yellow:  AG      Signal G
'    Clear:   AG      Signal G
'    Red:     12v     12v power
'    Black:   G       Power ground
'    Green:   C2      Control
'
'*****SENSOR_4 Soil Sensor Array*******************************
'***Soil Sensor Array: 5 Acclima... SDI12 array in terminal block
'    Blue:    C3      SDI-12 data  SDI_ADD: 1-5
'    Red:     12v     12v power
'    White:   G       Ground
'
'*********SHARING TERMINAL BLOCK C5
'*****SENSOR_5 Snow Depth*******************************
'***Snow Depth Sensor: SR50A    (SnowvUE - CONFIRM WHEN NEW SnowVUE Revieved)
'    Green:   C5      SDI-12 data  SDI_ADD: 1
'    Red:     12v     12v power
'    Black:   G       Power ground
'    White:   AG      White
'    Clear:   AG      Clear
'
'*****SENSOR_6 Pluviometer*******************************
'***Pluviometer: HydroMet PluvioII ****ADD HEATER
'    Green:  	C5:     SDI-12 data  SDI_ADD: 2
'    White:  	G:      Data ground
'    Yellow: 	12v:    12v power
'    Brown:  	G:      Power ground
'    ***Red:   24v:   	  24v power
'    ***Black:   G:  	Power ground
'
'*****SENSOR_7 Pyranometer*******************************
'***Pyranometer: CS320
'    White:  	C5      SDI-12 data  SDI_ADD: 3
'    Clear:  	AG      Signal G
'    Blue:  	AG      Signal G
'    Red:    	12v     12v Power
'    Black:  	G       Power G
'
'*****SENSOR_8 RH-temp*******************************
'***RH-temp Sensor: HygrovUE10
'    White:   C5      SDI-12 data  SDI_ADD: 4
'    Brown: 	12v     12v Power
'    Black:  	G       Power	G
'    Clear:   AG	    Shield G
'
'*****SENSOR_9 Cameras*******************************
'***3 Cameras to Monitor Site 2x per Day: D-Link 470x
'    Cat5 Pigtail  Ethernet Port to POE Switch
'    Red:    SW1  POE Power
'    Black:  G    POE Ground
'    Camera Password:  59812mc0


'****************************************************************************
'********DECLARE vARIABLES AND UNITS*****************************************

Dim AirDewDif  'Used with pyranometer
Dim Htr        'Used with pyranometer

Public Modem_Power As Boolean      'used to powercycle modem
'variable group to drive Cameras
Public Camera_Power As Boolean   'Set = true - manually power cameras
Public capturephotos As Boolean  'Set = true - manually initiate image capture

'TCP socket number: if = 0, unsuccesful; >0 = successful
Public makepic_N        'Camera N - faces North
Public makepic_S        'Camera S - faces South
Public makepic_G        'Camera G - faces ground into center of tri-leg tower
Public batt_volt        : Units batt_volt=v
Public panel_temp       : Units panel_temp=deg C
Public door             'Door open indicator
Public bp               : Units bp=kPa
Public wind_spd_1000    : Units wind_spd_1000=m s-1
Public wind_dir_1000    : Units wind_dir_1000=arcdeg
Public dew_point        : Units dew_point= deg C
Public snow_depth       : Units snow_depth= cm
Public snow_depth_q      'Final quality number - non-dimensional

'HygrovUE10 CSI HR temp sensor
Public rhtemp(2)
Alias rhtemp(1)=air_temp_0200  :Units air_temp_0200=deg C
Alias rhtemp(2)=rh        :Units rh = %

'Apogee Pyranometer SDI12 outputs
Public pyran(6)    
Alias pyran(1)=sol_rad          : Units sol_rad=W m-2
Alias pyran(2)=raw_mv           : Units raw_mv=mv
Alias pyran(3)=pyran_temp       : Units pyran_temp=deg C
Alias pyran(4)=pyran_x_axis     : Units pyran_x_axis =arcdeg
Alias pyran(5)=pyran_y_axis     : Units pyran_y_axis =arcdeg
Alias pyran(6)=pyran_z_axis     : Units pyran_z_axis =arcdeg
Public sol_rad_mj               : Units sol_rad_mj=mj m-2
Public HtrCtrl As Boolean

'Alias group for Pluvio - Pp 29-30 OTT Pluvio Manual
Public Pluvio(9)  'for use with Pluvio2
Alias Pluvio(1)=ppt_max_rate        : Units ppt_max_rate =mm hr-1 'extreme rainfall intensity
Alias Pluvio(2)=ppt                 : Units ppt=mm    'accu RT-NRT
Alias Pluvio(3)=pluv_accuNRT        : Units pluv_accuNRT=mm      'accu NRT
Alias Pluvio(4)=pluv_accuTtlNRT     : Units pluv_accuTtlNRT =mm   'accu total NRT
Alias Pluvio(5)=pluv_fill           : Units pluv_fill=mm     'Bucket RT
Alias Pluvio(6)=pluv_bucketNRT      : Units pluv_bucketNRT =mm   'Bucket NRT
Alias Pluvio(7)=pluv_temp           : Units pluv_temp=deg C  'Load cell T
Alias Pluvio(8)=pluv_heater         : Units pluv_heater=code   'Rim heater status
Alias Pluvio(9)=pluv_gagestat       : Units pluv_gagestat=code  'Gauge status

'Acclima TDR315N/310N - new version 2021 April
'Check vwc output - convert from % to m3 m-3 as needed
Public soil_1(5)
Public soil_2(5)
Public soil_3(5)
Public soil_4(5)
Public soil_5(5)
Alias soil_1(1)=soil_vwc_0005      	:Units soil_vwc_0005=m3 m-3
Alias soil_1(2)=soil_temp_0005  	  :Units soil_temp_0005=deg C
Alias soil_1(3)=soil_perm_0005	    ':Units soil_perm_0005=na
Alias soil_1(4)=soil_ec_blk_0005   :Units soil_ec_blk_0005=uS cm-1
Alias soil_1(5)=soil_ec_por_0005	  :Units soil_ec_por_0005=uS cm-1
Alias soil_2(1)=soil_vwc_0010      	:Units soil_vwc_0010=m3 m-3
Alias soil_2(2)=soil_temp_0010      :Units soil_temp_0010=deg C
Alias soil_2(3)=soil_perm_0010	    ':Units soil_perm_0010=na
Alias soil_2(4)=soil_ec_blk_0010   :Units soil_ec_blk_0010=uS cm-1
Alias soil_2(5)=soil_ec_por_0010   :Units soil_ec_por_0010=uS cm-1
Alias soil_3(1)=soil_vwc_0020      	:Units soil_vwc_0020=m3 m-3
Alias soil_3(2)=soil_temp_0020     	:Units soil_temp_0020=deg C
Alias soil_3(3)=soil_perm_0020	    ':Units soil_perm_0020=na
Alias soil_3(4)=soil_ec_blk_0020   :Units soil_ec_blk_0020=uS cm-1
Alias soil_3(5)=soil_ec_por_0020	  :Units soil_ec_por_0020=uS cm-1
Alias soil_4(1)=soil_vwc_0050  	    :Units soil_vwc_0050=m3 m-3
Alias soil_4(2)=soil_temp_0050      :Units soil_temp_0050=deg C
Alias soil_4(3)=soil_perm_0050	    ':Units soil_perm_0050=na
Alias soil_4(4)=soil_ec_blk_0050   :Units soil_ec_blk_0050=uS cm-1
Alias soil_4(5)=soil_ec_por_0050	  :Units soil_ec_por_0050=uS cm-1
Alias soil_5(1)=soil_vwc_0100  	    :Units soil_vwc_0100=m3 m-3
Alias soil_5(2)=soil_temp_0100     	:Units soil_temp_0100=deg C
Alias soil_5(3)=soil_perm_0100	    ':Units soil_perm_0100=na
Alias soil_5(4)=soil_ec_blk_0100   :Units soil_ec_blk_0100=uS cm-1
Alias soil_5(5)=soil_ec_por_0100	  :Units soil_ec_por_0100=uS cm-1

'Code to add timedate stamp to photos
Dim rTime(9) As Long          'declare as public and dimension rTime to 9
Alias rTime(1) = Year         'assign the alias Year to rTime(1)
Alias rTime(2) = Month        'assign the alias Month to rTime(2)
Alias rTime(3) = DOM          'assign the alias DOM to rTime(3)
Alias rTime(4) = Hour         'assign the alias Hour to rTime(4)
Alias rTime(5) = Minute       'assign the alias Minute to rTime(5)
Alias rTime(6) = Second       'assign the alias Second to rTime(6)
Alias rTime(7) = uSecond      'assign the alias uSecond to rTime(7)
Alias rTime(8) = WeekDay      'assign the alias WeekDay to rTime(8)
Alias rTime(9) = Day_of_Year  'assign the alias Day_of_Year to rTime(9)
Dim newfilename_N As String *25
Dim newfilename_S As String *25
Dim newfilename_G As String *25
Dim DST As Long
Dim i, PPPInfo(10) As String * 70

'Related to SR50A Snow Depth measurement (SnowVUE)
Dim n 'used as a counter
Dim FH As Long ' File Handle
Dim dummystr As String
Public SR50A_Raw(2)       ' holds raw values as they are read from SR50A
Alias SR50A_Raw(1) = Dist2Targ   : Units Dist2Targ = m 'Distance from the SR50A to target
Alias SR50A_Raw(2) = Rawq                'Measurement quality number.
Public SR50A_Go As Boolean ' When true, runs the SR50A measurement cycle
Public Set_D2G As Boolean ' When true, sets the SR50 distance to ground
Public TCDT       : Units TCDT = cm 'Final temperature corrected distance
Public Dist2Gnd   : Units Dist2Gnd = cm 'Distance to ground
Public SR50A(11,2)        ' Array to hold 11 unsorted SR50A measurements
Public Result_SR50A(11,2) ' Sorted array of 11 SR50A measurements, smallest to largest

Preservevariables

'*********DEFINE DATA TABLES*************************************************
'Data seq: air temp, max, min; 
DataTable(FiveMin,True,-1)
  DataInterval(0,5,Min,10)
  CardOut (0,-1 )
  Average(1,air_temp_0200,FP2,False)  :FieldNames ("air_temp_0200")
  Maximum (1,air_temp_0200,FP2,0,1) :FieldNames ("air_temp_0200_max")
  Minimum (1,air_temp_0200,FP2,0,1)  :FieldNames ("air_temp_0200_min")
  Average(1,rh,FP2,False)       :FieldNames ("rh")
  Average(1,bp,IEEE4,False)     :FieldNames ("bp")
  Average(1,sol_rad,FP2,False)       :FieldNames ("sol_rad")
  WindVector(1,wind_spd_1000,wind_dir_1000,FP2,False,0,0,0)
  FieldNames("wind_spd_1000,wind_dir_1000,wind_dir_sd_1000")
  Maximum(1,wind_spd_1000,FP2,False,False):FieldNames ("windgust_1000")
  Totalize(1,ppt,FP2,False)          :FieldNames ("ppt")
  Average(1,ppt_max_rate,FP2,False)  :FieldNames ("ppt_max_rate")
  Sample(1,snow_depth,FP2)                :FieldNames ("snow_depth")
  Sample(1,snow_depth_q,FP2)              :FieldNames ("snow_depth_q")
  Average(1,soil_vwc_0005*.01,FP2,False)  :FieldNames ("soil_vwc_0005")
  Average(1,soil_vwc_0010*.01,FP2,False)  :FieldNames ("soil_vwc_0010")
  Average(1,soil_vwc_0020*.01,FP2,False)  :FieldNames ("soil_vwc_0020")
  Average(1,soil_vwc_0050*.01,FP2,False)  :FieldNames ("soil_vwc_0050")
  Average(1,soil_vwc_0100*.01,FP2,False)  :FieldNames ("soil_vwc_0100")
  Average(1,soil_temp_0005,FP2,False)     :FieldNames ("soil_temp_0005")
  Average(1,soil_temp_0010,FP2,False)     :FieldNames ("soil_temp_0010")
  Average(1,soil_temp_0020,FP2,False)     :FieldNames ("soil_temp_0020")
  Average(1,soil_temp_0050,FP2,False)     :FieldNames ("soil_temp_0050")
  Average(1,soil_temp_0100,FP2,False)     :FieldNames ("soil_temp_0100")
  Average(1,soil_ec_blk_0005,FP2,False)   :FieldNames ("soil_ec_blk_0005")
  Average(1,soil_ec_blk_0010,FP2,False)   :FieldNames ("soil_ec_blk_0010")
  Average(1,soil_ec_blk_0020,FP2,False)   :FieldNames ("soil_ec_blk_0020")
  Average(1,soil_ec_blk_0050,FP2,False)   :FieldNames ("soil_ec_blk_0050")
  Average(1,soil_ec_blk_0100,FP2,False)   :FieldNames ("soil_ec_blk_0100")
  Average(1,soil_ec_por_0005,FP2,False)   :FieldNames ("soil_ec_por_0005")
  Average(1,soil_ec_por_0010,FP2,False)   :FieldNames ("soil_ec_por_0010")
  Average(1,soil_ec_por_0020,FP2,False)   :FieldNames ("soil_ec_por_0020")
  Average(1,soil_ec_por_0050,FP2,False)   :FieldNames ("soil_ec_por_0050")
  Average(1,soil_ec_por_0100,FP2,False)   :FieldNames ("soil_ec_por_0100")
  Average(1,soil_perm_0005,FP2,False)     :FieldNames ("soil_ec_perm_0005")
  Average(1,soil_perm_0010,FP2,False)     :FieldNames ("soil_ec_perm_0010")
  Average(1,soil_perm_0020,FP2,False)     :FieldNames ("soil_ec_perm_0020")
  Average(1,soil_perm_0050,FP2,False)     :FieldNames ("soil_ec_perm_0050")
  Average(1,soil_perm_0100,FP2,False)     :FieldNames ("soil_ec_perm_0100")
EndTable

DataTable(StatusReport,True,-1)
  DataInterval(0,120,Min,10)
  CardOut (0,-1 )
  Sample(1,batt_volt,FP2,False)
  Minimum(1,batt_volt,FP2,False,False)
  Sample(1,pluv_fill,FP2,False)
  Sample(1,pluv_gagestat,FP2,False)
  Sample(1,pluv_heater,FP2,False)
  Sample(1,pluv_temp,FP2,False)
  Sample(1,pyran_x_axis,FP2,False)
  Sample(1,pyran_y_axis,FP2,False)
  Sample(1,pyran_z_axis,FP2,False)
  Sample(1,door,FP2,False)
EndTable
'****************************************************************************
'*********INITIATE PROGRAM

BeginProg

Modem_Power=true ' turn modem on after compile   

  ' Initialize Snow Depth Distance to Target: Default value varies by Station
  ' Use Set_D2G to rezero 
  If FileSize ("USR:Dist2Gnd.txt") > 0 Then
    FH = FileOpen ("USR:Dist2Gnd.txt","r",0)
    FileRead (FH,dummystr,10)
    SplitStr (Dist2Gnd,dummystr,"",1,0)
    FileClose (FH)
  Else
    Dist2Gnd = 188.7  'Default offset Revisit WHEN SnowVUE INSTALLED
  EndIf

    'snow_depth = -99  'Value placeholder when instrument not installed
    'snow_depth_q = -99  
'*********MAIN SCAN********************************************************** 
  Scan(3,Sec,1,0) 'Changed to 3 sec from 5 sec scan to restore WMO standard for wind gusts
    Battery(batt_volt)
    PanelTemp(panel_temp,60)

'**********SENSOR_1 Open Door sensor**********
    'Black--5v; Black--C1
    '0=Low=closed, 1=high=open
    If CheckPort(C1) = True Then
      Door = 0
    Else
      Door = 1
    EndIf
    
    'door = door * Interval

'**********SENSOR_2 Wind monitor**********
'    Red:   P1      WS Signal	
'    Green: 4H SE7    WD Signal	
'    Brown: 4L SE8     WD Excitation

'RMYoung 09101-SE (MODBUS RS-485 at 9600 baud) Wind Monitor measurements
    voltSe(wind_spd_1000,1,mv5000,13,0,0,15000,0.020,0)
    voltSe(wind_dir_1000,1,mv5000,14,0,0,15000,0.108,0)
    If wind_dir_1000>360 Then wind_dir_1000=wind_dir_1000-360
    'AvgRun(WindSpd3s,1,WindSpd1s,3)

'*****SENSOR_3 Barometer**********************************
'CS100 Barometric Pressure Sensor measurement 'bp_150'
'    Blue:    1L SE2     Signal H
'    Green:   C2      Control
    PortSet(C2,1)
    VoltSe(bp,1,mv5000,2,True,0,60,0.2,600)
    bp=bp*0.1

'*****SENSOR_5 Snow Depth*******************************
'***Snow Depth Sensor: SnowvUE - CONFIRM WHEN NEW SnowvUE RECEIvED
'    Green:   C5      SDI-12 data  SDI_ADD: 1

    ' ************************************
    ' * SR50A Snow Depth (Occurs in Slow Sequence)
    ' ************************************

    ' The SR50A trigger variable "SR50A_Go" is set true at :04, :11, :14, etc.
    ' to run the measurement sequence right before the 5-minute record is 
    ' written. This can be set to true manually if desired.

    If IfTime(237,300,Sec) Then SR50A_Go = True ' at 03 min 57 sec into 5-min period

    ' When the ground is clear of snow and debris, the SR50A can be "zeroed out",
    ' sort of speak, by setting "Set_D2G" true.  This will trigger a measurement
    ' cycle, then set "Dist2Gnd" to the result.

    If Set_D2G Then SR50A_Go = True

'*****SENSOR_9 Cameras*******************************
    ' Camera Images: Occurs in Slow Sequence Below
    ' Trigger images @ 0900, 1500 Local time: 1500/2100 UTC or 1600/2200 UTC 
    ' Turn on IP switch and cameras 5 minutes before photo time and
    ' turn off ip 5 minutes after photo time

    DST = DaylightSavingUS(0) ' returns 3600 during Daylight time, 0 during Standard time
    DST = DST / 60 ' equals 60 (minutes) during Daylight time, 0 during Standard time

    If IfTime (955-DST,1440,Min) Then Camera_Power = true
    If IfTime (960-DST,1440,Min) Then capturephotos = true
    If IfTime (965-DST,1440,Min) Then Camera_Power = false
    If IfTime (1315-DST,1440,Min) Then Camera_Power = true
    If IfTime (1320-DST,1440,Min) Then capturephotos = true
    If IfTime (1325-DST,1440,Min) Then Camera_Power = false

    SW12 (SW12_1,Camera_Power)
    
  NextScan

'  **************************************************************************
'  Group of SDI12Recorder calls on C5
  SlowSequence '(1)

  Scan (60,Sec,5,0)         'Increase to 60 sec from 20 to expand time for SDI12 response

    SemaphoreGet (1) ' To avoid conflicts with other C5 devices in other sequences

  '*****SENSOR_7 Pyranometer*******************************
  '***Pyranometer: CS320
  '    White:  	C5      SDI-12 data  SDI_ADD 3
    SDI12Recorder(pyran(),C5,"3","C4!",1,0,-1)
    'Calculate total flux: multiplier based on SlowSequence scan rate of 20 Seconds
    sol_rad_mj=sol_rad*20E-06
    'CS320 Digital Thermopile Pyranometer heater control
    DewPoint(dew_point,air_temp_0200,rh)
    AirDewDif=pyran_temp-dew_point
    If pyran_temp < 2 OR AirDewDif < 2 Then HtrCtrl = True
    If pyran_temp > 3 AND AirDewDif > 3 Then HtrCtrl = False
    If batt_volt < 11.7 Then HtrCtrl = False
    If HtrCtrl = True Then
      SDI12Recorder(Htr,C5,"3","XHON!",1,0)
    Else
      SDI12Recorder(Htr,C5,"3","XHOFF!",1,0)
    EndIf

'*****SENSOR_6 Pluviometer*******************************
'***Pluviometer: HydroMet PluvioII ****ADD HEATER
'    Green:  	C5:     SDI-12 data  SDI_ADD 2
    SDI12Recorder(Pluvio(),C5,"2","C!",1,0,-1)

'*****SENSOR_8 RH-temp*******************************
'***RH-temp Sensor: HygrovUE10
'    White:   C5      SDI-12 data  SDI_ADD: 4
    SDI12Recorder(rhtemp(),C5,"4","C!",1,0)  

    SemaphoreRelease (1)

'*********COMMUNICATION CONTROLS*********************************************
' Force logger to use the PPP network to connect to the Konect PakBus router and related DNS servers

    IPRoute("minos.konectgds.com",1,1)
    
	  SplitStr (PPPInfo(),Status.PPPInfo,CHR(13)&CHR(10),10,5)
	  For i = 1 To 4    'Reduced to 4 from 10 iterations per scan made by second iteration in practice
	    If InStr (1,PPPInfo(i),"dns: ",2) > 0 Then
	      PPPInfo(i) = Replace (PPPInfo(i),"dns: ","")
	      IPRoute(PPPInfo(i),1,1)
	    EndIf
	  Next i

    CallTable FiveMin

  NextScan

  SlowSequence  '(2)

'*****SENSOR_4 Soil Sensor Array*******************************
'***Soil Sensor Array: 5 Soillima... SDI12 array in terminal block
'    Blue:    C3      SDI-12 data  SDI_ADD 1-5
  Scan (1,Min,3,0)    
    If IfTime(4,5,min) Then
      SDI12Recorder(soil_1(),C3,"1","M!",1,0,-1)
      SDI12Recorder(soil_2(),C3,"2","M!",1,0,-1)
      SDI12Recorder(soil_3(),C3,"3","M!",1,0,-1)
      SDI12Recorder(soil_4(),C3,"4","M!",1,0,-1)
      SDI12Recorder(soil_5(),C3,"5","M!",1,0,-1)
    EndIf
  NextScan


  SlowSequence '(3)
    'Calls for Cameras, Modem Power recycle

'*****SENSOR_9 Cameras*******************************
'***3 Cameras to Monitor Site 2x per Day: D-Link 470x
'    Cat5 Pigtail  Ethernet Port to POE Switch
'    Red:    SW1  POE Power
'    Black:  G    POE Ground
'    Camera Password:  59812mc0
  Scan (1,Min,3,0)
    If capturephotos = true Then        'Makes photos
      IPRoute ("192.168.1.20",0,1) 'Force HttpGet out ethernet port Camera N
      IPRoute ("192.168.1.30",0,1) 'Force HttpGet out ethernet port Camera S
      IPRoute ("192.168.1.40",0,1) 'Force HttpGet out ethernet port Camera G
      RealTime (rTime)
      Sprintf (newfilename_N,"%04i%02i%02i_%02i%02i_N.jpg",Year,Month,DOM,Hour,Minute)
      Sprintf (newfilename_S,"%04i%02i%02i_%02i%02i_S.jpg",Year,Month,DOM,Hour,Minute)
      Sprintf (newfilename_G,"%04i%02i%02i_%02i%02i_G.jpg",Year,Month,DOM,Hour,Minute)

   ' For unknown reasons, successful image capture may require multiple attempts
      n = 0 ' For camera N
      Do
        makepic_N = HTTPGet ("http://admin:59812mc0@192.168.1.20/image/jpeg.cgi?profile=1","CRD:"&newfilename_N,"")  '
        n = n + 1
      Loop While makepic_N = 0 AND n < 4
      If makepic_N > 0 Then
        makepic_N = n
        'FileCopy ("CRD:"&newfilename_N,"USR:"&newfilename_N)  'Transfer photo from CARD to URS drive
      EndIf
      
      n = 0 ' For camera S
      Do
        makepic_S = HTTPGet ("http://admin:59812mc0@192.168.1.30/image/jpeg.cgi?profile=1","CRD:"&newfilename_S,"")
        n = n + 1
      Loop While makepic_S = 0 AND n < 4
      If makepic_S > 0 Then
        makepic_S = n
        'FileCopy ("CRD:"&newfilename_S,"USR:"&newfilename_S)
      EndIf
      
      n = 0 ' For camera G
      Do
        makepic_G = HTTPGet ("http://admin:59812mc0@192.168.1.40/image/jpeg.cgi?profile=1","CRD:"&newfilename_G,"")
        n = n + 1
      Loop While makepic_G = 0 AND n < 4
      If makepic_G > 0 Then
        makepic_G = n
        'FileCopy ("CRD:"&newfilename_G,"USR:"&newfilename_G)
      EndIf

    EndIf

    capturephotos = False

'*********************** Cell Modem Reboot *************************************
    If TimeIsBetween (2,3,1440,min) Then
			Modem_Power=False
		Else 
			Modem_Power=True  
		EndIf  
		
    If batt_volt < 11.4 Then 
      Modem_Power=false
    EndIf
	
    SW12(SW12_2,Modem_Power) 

  NextScan

  SlowSequence '(4) 
    ' Calls for Snow Depth Sensor

'*****SENSOR_5 Snow Depth*******************************
'***Snow Depth Sensor: SR50A     SnowvUE - CONFIRM WHEN NEW SnowvUE RECEIvED
'    Green:   C5      SDI-12 data  SDI_ADD: 1
    ' Logic to make 11 snow depth measurements, sort, store corrected values.

  Scan (1,Min,3,0)
    If SR50A_Go Then
      For n = 1 To 11
        SemaphoreGet (1) ' To avoid conflicts with other C5 devices in other sequences
          'SR50A Sonic Ranging Sensor (SDI-12 Output) measurements 'DT' & 'q'
          SDI12Recorder(SR50A_Raw(),C5,"1","C1!",1,0,-1)
        SemaphoreRelease (1)

        If SR50A_Raw(1) = "NAN" Then
          SR50A(n,1) = -9 : SR50A(n,2) = -9
        Else 'Calculate the temperature corrected distance.
          SR50A(n,1) = SR50A_Raw(1) * 100 * SQR((air_temp_0200+ 273.15) / 273.15)   'panel_temp - REMOVED
          SR50A(n,2) = SR50A_Raw(2) * 1
        EndIf
        Delay (0,4,Sec)
      Next n

      SR50A_Go = False
      SortSpa (Result_SR50A(1,1),11,SR50A(1,1),2)
      TCDT = Result_SR50A(6,1) ' get the median value (#6 of 11)
      snow_depth_q = Result_SR50A(6,2)
      If Set_D2G Then ' set distance to ground
        Dist2Gnd = TCDT
  		  FH = FileOpen ("USR:Dist2Gnd.txt","w",0) ' save value to file on USR drive
		    Sprintf (dummystr,"%f",Dist2Gnd)
		    FileWrite (FH,dummystr,0)
		    FileClose (FH)
        Set_D2G = False
      EndIf
      snow_depth = Dist2Gnd - TCDT
    EndIf

    CallTable StatusReport

  NextScan

EndProg
